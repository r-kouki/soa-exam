services:
  mongodb:
    image: mongo:latest
    container_name: dating-app-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db # Persists data in a volume
    networks:
      - app-network

  user-service:
    build:
      context: ./microservices/user-service
      dockerfile: Dockerfile
    container_name: dating-app-user-service
    ports:
      - "50051:50051" # Exposes the gRPC port
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/dating_app_user_db
      - USER_SERVICE_PORT=50051
      # KEYCLOAK_URL will be http://keycloak:8080 if user-service needs to call Keycloak directly
    depends_on:
      - mongodb
    volumes:
      - ./microservices/user-service:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest # Use a specific version in production
    container_name: dating-app-keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      # - KC_PROXY=edge # Uncomment if running behind a reverse proxy
      # - KC_HOSTNAME_STRICT=false # For development, if facing hostname issues
      # - KC_HTTP_ENABLED=true # If you want to run on HTTP for dev, default is HTTPS on 8443 unless start-dev
      # - KC_DB=postgres # Example if you want to use PostgreSQL for Keycloak
    ports:
      - "8080:8080"
    command: start-dev # For development. For production, use 'start' with proper configuration.
    networks:
      - app-network
    # volumes:
      # - keycloak_data:/opt/keycloak/data # Optional: for persisting Keycloak data

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: dating-app-api-gateway
    ports:
      - "4000:4000"
    environment:
      - API_GATEWAY_PORT=4000
      - USER_SERVICE_GRPC_URL=user-service:50051 # Connect to user-service by its service name
      - MATCHING_SERVICE_GRPC_URL=matching-service:50052 # Added for future use by gateway
      - KEYCLOAK_URL=http://keycloak:8080 # Connect to keycloak by its service name
      - KEYCLOAK_REALM=dating-app-realm
      - KEYCLOAK_CLIENT_ID=dating-app-gateway
      - KEYCLOAK_CLIENT_SECRET=wsTFdDURHKvfEituRVBfm7ymTh72pzWk # The secret you saved
    depends_on:
      - user-service
      - matching-service # Added dependency
      - keycloak
    volumes:
      - ./api-gateway:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

  matching-service:
    build:
      context: ./microservices/matching-service
      dockerfile: Dockerfile
    container_name: dating-app-matching-service
    ports:
      - "50052:50052" # Exposes its gRPC port
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/dating_app_matching_db # Uses same mongo instance, diff DB
      - MATCHING_SERVICE_PORT=50052
      - USER_SERVICE_GRPC_URL=user-service:50051 # Needs to talk to user-service
    depends_on:
      - mongodb
      - user-service
    volumes:
      - ./microservices/matching-service:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

volumes:
  mongodb_data:
  # keycloak_data: # Optional: define volume if used above

networks:
  app-network:
    driver: bridge 