syntax = "proto3";

package chat;

import "google/protobuf/timestamp.proto"; // For timestamps

// Potentially import user.proto if we need UserProfile type here, or keep it simple with user_id strings.
// import "proto/user.proto"; 

message ChatMessage {
  string message_id = 1;
  string chat_room_id = 2; // Identifier for the chat room (e.g., derived from match_id)
  string sender_id = 3;    // auth_id of the sender
  string content = 4;        // Message text content
  google.protobuf.Timestamp timestamp = 5;
  // string content_type = 6; // e.g., "text", "image_url", "system_message"
  // bool read = 7; // Could be handled per user, more complex
}

// Service for chat-related operations that might use gRPC
service ChatRPCService {
  // Fetches message history for a given chat room
  rpc GetMessageHistory(GetMessageHistoryRequest) returns (GetMessageHistoryResponse);
  // Could add: rpc GetChatRooms(GetChatRoomsRequest) returns (GetChatRoomsResponse);
}

message GetMessageHistoryRequest {
  string chat_room_id = 1;
  int32 page_size = 2;      // For pagination
  string before_message_id = 3; // For fetching messages before a certain message (cursor pagination)
  // google.protobuf.Timestamp before_timestamp = 4; // Alternative pagination
}

message GetMessageHistoryResponse {
  repeated ChatMessage messages = 1;
  string next_page_cursor = 2; // Could be the ID of the oldest message fetched, for next request
} 